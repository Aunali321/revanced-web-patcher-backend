name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write
  packages: read

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Build application
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./gradlew.bat installDist

      - name: Create Windows installer
        run: |
          $version = "${{ github.ref_name }}".Substring(1)
          
          # Create app-image directory with GUI files
          $appDir = "build/app-image"
          New-Item -ItemType Directory -Force -Path $appDir
          
          # Copy GUI launcher files to app directory
          Copy-Item "src/main/resources/revanced-web-patcher-gui.ps1" "$appDir/revanced-web-patcher-gui.ps1"
          Copy-Item "src/main/resources/ReVanced-Web-Patcher-GUI.bat" "$appDir/ReVanced-Web-Patcher-GUI.bat"
          
          jpackage `
            --type exe `
            --input build/install/web-patcher-service/lib `
            --main-jar web-patcher-service-$version.jar `
            --main-class app.revanced.webpatcher.ApplicationKt `
            --name "ReVanced Web Patcher" `
            --app-version $version `
            --vendor "ReVanced" `
            --description "Local API backend for patching Android APKs with ReVanced" `
            --win-dir-chooser `
            --win-menu `
            --win-shortcut `
            --win-menu-group "ReVanced" `
            --win-shortcut-prompt `
            --app-content $appDir `
            --dest build/installer

      - name: Upload Windows installer
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: build/installer/*.exe

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Build application
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./gradlew installDist

      - name: Create macOS installer
        run: |
          version="${{ github.ref_name }}"
          version="${version#v}"
          jpackage \
            --type pkg \
            --input build/install/web-patcher-service/lib \
            --main-jar web-patcher-service-$version.jar \
            --main-class app.revanced.webpatcher.ApplicationKt \
            --name "ReVanced Web Patcher" \
            --app-version $version \
            --vendor "ReVanced" \
            --description "Local API backend for patching Android APKs with ReVanced" \
            --dest build/installer

      - name: Upload macOS installer
        uses: actions/upload-artifact@v4
        with:
          name: macos-installer
          path: build/installer/*.pkg

  build-linux:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Build application
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./gradlew installDist

      - name: Create Linux packages
        run: |
          version="${{ github.ref_name }}"
          version="${version#v}"
          
          # DEB package
          jpackage \
            --type deb \
            --input build/install/web-patcher-service/lib \
            --main-jar web-patcher-service-$version.jar \
            --main-class app.revanced.webpatcher.ApplicationKt \
            --name revanced-web-patcher \
            --app-version $version \
            --vendor "ReVanced" \
            --description "Local API backend for patching Android APKs with ReVanced" \
            --linux-menu-group "Development" \
            --linux-shortcut \
            --linux-package-deps "libasound2, libpng16-16, zenity" \
            --resource-dir src/main/resources \
            --dest build/installer
          
          # Extract DEB, add GUI launcher, repackage
          cd build/installer
          dpkg-deb -R revanced-web-patcher_$version-1_amd64.deb temp-deb
          
          # Add GUI launcher to bin directory
          cp ../../src/main/resources/revanced-web-patcher-gui temp-deb/opt/revanced-web-patcher/bin/
          chmod +x temp-deb/opt/revanced-web-patcher/bin/revanced-web-patcher-gui
          
          # Repackage with gzip
          dpkg-deb -Zgzip -b temp-deb revanced-web-patcher_$version-1_amd64.deb
          rm -rf temp-deb
          cd ../..
          
          # Repackage with gzip for Ubuntu 22.04 compatibility
          cd build/installer
          dpkg-deb -R revanced-web-patcher_$version-1_amd64.deb temp-deb
          dpkg-deb -Zgzip -b temp-deb revanced-web-patcher_$version-1_amd64.deb
          rm -rf temp-deb
          cd ../..
          
          # RPM package (note: GUI launcher works same as DEB on Fedora/RHEL)
          jpackage \
            --type rpm \
            --input build/install/web-patcher-service/lib \
            --main-jar web-patcher-service-$version.jar \
            --main-class app.revanced.webpatcher.ApplicationKt \
            --name revanced-web-patcher \
            --app-version $version \
            --vendor "ReVanced" \
            --description "Local API backend for patching Android APKs with ReVanced" \
            --linux-menu-group "Development" \
            --linux-shortcut \
            --resource-dir src/main/resources \
            --dest build/installer
          
          # Note: RPM users need to manually install zenity: sudo dnf install zenity
          # The GUI launcher script is included via --resource-dir but needs post-install handling

      - name: Upload Linux packages
        uses: actions/upload-artifact@v4
        with:
          name: linux-packages
          path: |
            build/installer/*.deb
            build/installer/*.rpm

  release:
    needs: [build-windows, build-macos, build-linux]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Generate changelog
        id: changelog
        uses: ardalanamini/auto-changelog@v4.0.6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          release-name: ${{ github.ref_name }}
          semver: false
          mention-authors: false
          mention-new-contributors: false
          include-compare-link: true

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            windows-installer/*.exe
            macos-installer/*.pkg
            linux-packages/*.deb
            linux-packages/*.rpm
          body: |
            ${{ steps.changelog.outputs.changelog }}
            
            ## Downloads
            
            ### Windows
            - `ReVanced Web Patcher-*.exe` - Double-click to install
            
            ### macOS
            - `ReVanced Web Patcher-*.pkg` - Double-click to install (bypass security warning in System Preferences)
            
            ### Linux
            - `revanced-web-patcher_*.deb` - For Ubuntu/Debian: `sudo dpkg -i revanced-web-patcher_*.deb`
            - `revanced-web-patcher-*.rpm` - For Fedora/RHEL: `sudo rpm -i revanced-web-patcher-*.rpm`
            
            All installers include a bundled Java runtime - no need to install Java separately!
